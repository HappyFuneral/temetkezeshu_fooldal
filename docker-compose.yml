version: '3'
services:
  mysql:
    container_name: temdb
    restart: unless-stopped
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: Aevum176942
      MYSQL_USER: root2
      MYSQL_PASSWORD: Aevum176942
      MYSQL_DATABASE: temetkezes
    volumes:
      - ./data:/var/lib/mysql
      - ./backups:/backup # Itt tároljuk a dump fájlokat
  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin
    restart: unless-stopped
    links:
      - mysql
    environment:
        PMA_HOST: temdb
        PMA_PORT: 3306
  spring-boot-app:
    container_name: javabackend
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/temetkezes
      SPRING_DATASOURCE_USERNAME: root2
      SPRING_DATASOURCE_PASSWORD: Aevum176942

  bekes:
    container_name: bekes
    restart: unless-stopped
    build:
      context: ./bekes_react
      dockerfile: Dockerfile
  react-app:
    container_name: reactfrontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    links:
      - "spring-boot-app"
  bekes2:
    container_name: bekes2wp
    depends_on:
      - mysql
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    ports:
      - "8000:80"
      # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost:8000
    environment:
      WORDPRESS_DB_HOST: temdb:3306
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: Aevum176942
      WORDPRESS_DB_NAME: wpdb
  # Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes:
      ["./bekes2_wp:/var/www/html"]
  bekes3:
    container_name: bekes3wp
    depends_on:
      - mysql
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    ports:
      - "8000:80"
      # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost:8000
    environment:
      WORDPRESS_DB_HOST: temdb:3306
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: Aevum176942
      WORDPRESS_DB_NAME: wpdb2
    # Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes:
      [ "./bekes3_wp:/var/www/html" ]
  proxy:
    build: ./proxy
    restart: unless-stopped
    container_name: app-prx
    ports:
      - "80:80"
